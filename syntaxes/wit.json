{
  "name": "WebAssembly Interface Type",
  "foldingStartMarker": "(\\{|\\[)\\s*",
  "foldingStopMarker": "\\s*(\\}|\\])",
  "scopeName": "source.wit",
  "patterns": [
    {
      "include": "#comment"
    }
  ],
  "repository": {
    "whitespace": {
      "name": "meta.whitespace.wit",
      "comment": "whitespace token",
      "match": "\\s+"
    },
    "comment": {
      "patterns": [
        {
          "include": "#line-comment"
        },
        {
          "include": "#block-comment"
        }
      ]
    },
    "line-comment": {
      "name": "comment.line.double-slash.wit",
      "comment": "line comment",
      "begin": "//",
      "end": "$"
    },
    "block-comment": {
      "name": "comment.block.wit",
      "comment": "block comment",
      "begin": "/\\*",
      "end": "\\*/"
    },
    "operator": {
      "name": "keyword.operator.wit",
      "comment": "operators",
      "match": "(\\=|\\,|\\:|\\;|\\(|\\)|\\{|\\}|\\<|\\>|\\/|\\*|\\.|\\@|->)"
    },
    "keyword": {
      "name": "keyword.wit",
      "comment": "keywords",
      "match": "\\b(as|async|bool|borrow|char|constructor|enum|export|f32|f64|flags|from|func|future|import|include|interface|list|option|own|package|record|resource|result|s16|s32|s64|s8|static|stream|string|tuple|type|u16|u32|u64|u8|use|variant|with|world)\\b"
    },
    "integer": {
      "name": "constant.numeric.integer.wit",
      "comment": "integer literal",
      "match": "\\b([0-9]+)\\b"
    },
    "identifier": {
      "name": "variable.other.wit",
      "comment": "identifier",
      "match": "\\b(%?[a-zA-Z_][a-zA-Z0-9_\\-]*)\\b"
    }
  }
}
